// Import from Obsidian API
import { App, Editor, MarkdownView, Modal, Notice, Plugin, PluginSettingTab, Setting, TFile, TFolder } from 'obsidian';

// Import utilities for selection mode handling
import {
  SelectionMode,
  getSelectionModeLabel,
  normalizeSelectionMode
} from './src/utils/selection-mode-helpers';

// Import the SettingsAdapter from state/adapters
import { SettingsAdapter, createAndRegisterSettingsAdapter } from './src/state/adapters/SettingsAdapter';
import { SettingsManager } from './src/state/SettingsManager';
import { MetricsProcessor, DreamMetricsProcessor, MetricsCollector, TableStatisticsUpdater } from './src/metrics';

// Import EventHandling utilities for event handling
import { attachClickEvent } from './src/templates/ui/EventHandling';

// For backward compatibility with legacy types
import { LintingSettings, Timeline, CalendarView, ActiveJournal } from './types';

// Internal imports - Settings
import { DreamMetricsSettingTab, lucideIconMap, RECOMMENDED_METRICS_ORDER, DISABLED_METRICS_ORDER, sortMetricsByOrder } from './settings';
import { createFolderAutocomplete, createSelectedNotesAutocomplete } from './autocomplete';

// Internal imports - Logging
import { LoggingAdapter } from './src/logging';

// Internal imports - UI Components
import { CustomDateRangeModal } from './src/dom/modals';
import {
    DateNavigatorModal,
    NavigatorViewMode,
    DateNavigatorView,
    DATE_NAVIGATOR_VIEW_TYPE,
    DateNavigatorIntegration
} from './src/dom/date-navigator';
import { DateRangeService, DateFilter } from './src/dom/filters';

// Import UI components from journal_check/ui using individual imports instead of barrel file
import { 
  DreamJournalManager 
} from './src/journal_check/ui/DreamJournalManager';
import { JournalStructureModal } from './src/journal_check/ui/JournalStructureModal';
import { TestModal } from './src/journal_check/ui/TestModal';
import { TemplateWizard } from './src/journal_check/ui/TemplateWizard';

// Internal imports - Services
import { LintingEngine } from './src/journal_check/LintingEngine';
import { TemplaterIntegration } from './src/journal_check/TemplaterIntegration';
import { TimeFilterManager } from './src/timeFilters';
import { DreamMetricsState } from './src/state/DreamMetricsState';

import { ContentParser } from './src/parsing/services/ContentParser';
import { DateUtilsTestModal } from './src/testing/utils/DateUtilsTestModal';

// Import the DEFAULT_JOURNAL_STRUCTURE_SETTINGS constant directly from the source
import { DEFAULT_JOURNAL_STRUCTURE_SETTINGS } from './src/types/journal-check';

// Add near the top with other imports
import { runSettingsHelpersTests } from './src/testing/utils/SettingsHelpersTests';
import { runMetricHelpersTests } from './src/testing/utils/MetricHelpersTests';
import { runSelectionModeHelperTests } from './src/testing/utils/SelectionModeHelpersTests';
import { runTypeGuardsTests } from './src/testing/utils/TypeGuardsTests';
import { runPropertyHelpersTests } from './src/testing/utils/PropertyHelpersTests';
import { runContentParserParameterTests } from './src/testing/run-content-parser-tests';
import { runSettingsAdapterTests } from './src/testing/utils/SettingsAdapterTests';
import { runEventHandlingTests } from './src/testing/utils/EventHandlingTests';
import { runComponentFactoryTests } from './src/testing/utils/ComponentFactoryTests';
import { runDreamMetricsStateTests } from './src/testing/DreamMetricsStateTests';

import { MetricsTabsModal } from './src/dom/modals/MetricsTabsModal';

// Import ContentToggler and related UI components
import { ContentToggler } from './src/dom/content/ContentToggler';
import { FilterUI } from './src/dom/filters/FilterUI';
import { TableGenerator, TableManager } from './src/dom/tables';
import { ModalsManager } from './src/dom/modals/ModalsManager';

// Import ProjectNoteManager
import { ProjectNoteManager } from './src/state/ProjectNoteManager';

// Import RibbonManager
import { RibbonManager } from './src/dom/RibbonManager';

// Import the PluginLoader
import { PluginLoader } from './src/plugin/PluginLoader';

// Import debugging tools
import { DebugTools } from './src/utils/DebugTools';

// Import FilterManager
import { FilterManager } from './src/dom/filters/FilterManager';

// Import EventHandler
import { EventHandler } from './src/events/EventHandler';

// Move this to the top of the file, before any functions that use it
let customDateRange: { start: string, end: string } | null = null;

// Global instance for functions that need access to ContentToggler
let globalContentToggler: ContentToggler;

// Global instance for table generation
let globalTableGenerator: TableGenerator;

// Default settings for linting functionality
const DEFAULT_LINTING_SETTINGS: LintingSettings = {
    enabled: true,
    rules: [
        {
            id: 'dream-callout-required',
            name: 'Dream Callout Required',
            description: 'Requires the dream callout in journal entries',
            type: 'structure',
            severity: 'error',
            enabled: true,
            pattern: '> \\[!dream\\]',
            message: 'Dream journal entries must include a dream callout',
            priority: 10
        }
    ],
    structures: [
        {
            id: 'default-dream-structure',
            name: 'Default Dream Structure',
            description: 'Standard dream journal structure with required callouts',
            type: 'flat',
            rootCallout: 'dream',
            childCallouts: ['symbols', 'reflections', 'interpretation'],
            metricsCallout: 'metrics',
            dateFormat: ['YYYY-MM-DD'],
            requiredFields: ['dream'],
            optionalFields: ['symbols', 'reflections', 'interpretation', 'metrics']
        },
        {
            id: 'nested-dream-structure',
            name: 'Nested Dream Structure',
            description: 'Nested dream journal structure with all callouts inside the root callout',
            type: 'nested',
            rootCallout: 'dream',
            childCallouts: ['symbols', 'reflections', 'interpretation', 'metrics'],
            metricsCallout: 'metrics',
            dateFormat: ['YYYY-MM-DD'],
            requiredFields: ['dream', 'reflections'],
            optionalFields: ['symbols', 'interpretation', 'metrics']
        }
    ],
    templates: [
        {
            id: 'default-template',
            name: 'Standard Dream Journal',
            description: 'Default template for dream journal entries',
            structure: 'default-dream-structure',
            content: `# Dream Journal Entry

> [!dream]
> Enter your dream here.

> [!symbols]
> - Symbol 1: Meaning
> - Symbol 2: Meaning

> [!reflections]
> Add your reflections here.

> [!metrics]
> Clarity: 7
> Vividness: 8
> Coherence: 6
`,
            isTemplaterTemplate: false
        }
    ],
    templaterIntegration: {
        enabled: false,
        folderPath: 'templates/dreams',
        defaultTemplate: 'templates/dreams/default.md'
    },
    contentIsolation: {
        ignoreImages: true,
        ignoreLinks: false,
        ignoreFormatting: true,
        ignoreHeadings: false,
        ignoreCodeBlocks: true,
        ignoreFrontmatter: true,
        ignoreComments: true,
        customIgnorePatterns: []
    },
    userInterface: {
        showInlineValidation: true,
        severityIndicators: {
            error: '❌',
            warning: '⚠️',
            info: 'ℹ️'
        },
        quickFixesEnabled: true
    }
}; 