# Instructions for Using docs/SPECIFICATION.md

This file provides guidance on how to interpret and utilize the information in the `docs/SPECIFICATION.md` document.

## 1. Purpose of docs/SPECIFICATION.md

-   Understand that `docs/SPECIFICATION.md` outlines the technical specifications and implementation details of the OneiroMetrics plugin.
-   Recognize that it's designed for a technical audience (developers or advanced users).

## 2. Structure of docs/SPECIFICATION.md

-   Note that `docs/SPECIFICATION.md` is organized into the following main sections:
    -   `Overview`: General description of the plugin.
    -   `Core Components`: Details about the plugin's structure and data structures.
    -   `Features`: Description of the plugin's functionalities.
    -   `Technical Requirements`: Software and hardware requirements.
    -   `Security Considerations`: Security-related information.
    -   `Performance Considerations`: Performance-related information.
    -   `Future Considerations`: Potential enhancements and scalability plans.
    -   `Testing Strategy`: Testing methodologies used.

## 3. How to Use docs/SPECIFICATION.md

-   **Plugin Architecture:** When asked about the plugin's file structure or organization, refer to the "Core Components" / "Plugin Structure" section.
-   **Data Structures:** When explaining how data is stored or handled, refer to the "Core Components" / "Data Structures" section.
    -   Provide the TypeScript interface definitions (e.g., `DreamMetric`, `DreamMetricsSettings`, `DreamMetricData`) if relevant.
-   **Callout Format:** When describing how to format metric callouts in notes, refer to the "Core Components" / "Callout Format" section.
    -   Provide the example callout format.
-   **Project Note Format:** When explaining the structure of the generated metrics table, refer to the "Core Components" / "Project Note Format" section.
    -   Show the examples of the "Summary Section" and "Detailed Section" table formats.
-   **Feature Details:** When asked about the technical details of a specific feature, refer to the "Features" section.
-   **Requirements:** When discussing compatibility or dependencies, refer to the "Technical Requirements" section.
    -   Mention the minimum Obsidian API version.
-   **Security and Performance:** When addressing concerns about security or performance, refer to the "Security Considerations" and "Performance Considerations" sections.
-   **Future Development:** When discussing potential future enhancements, refer to the "Future Considerations" section.
-   **Testing Methodologies:** When asked about testing approaches, refer to the "Testing Strategy" section.

## 4. Important Notes for Cursor

-   Provide accurate and technically precise information.
-   Use code snippets and examples from the specification whenever possible.
-   Assume the user has a technical background (e.g., familiarity with programming concepts).
-   Avoid oversimplifying technical details unless necessary.